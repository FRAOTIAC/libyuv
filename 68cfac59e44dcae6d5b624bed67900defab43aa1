{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "59744da1_f28a8b50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-04-29T18:37:13Z",
      "side": 1,
      "message": "Looks good but I wonder if addv can be hoisted from the main loop?",
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "901e963b_03464c09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1571352
      },
      "writtenOn": "2024-05-01T08:37:30Z",
      "side": 1,
      "message": "Answered in the other thread",
      "parentUuid": "59744da1_f28a8b50",
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb4a5d2e_48abdc36",
        "filename": "source/compare_neon64.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-04-29T18:37:13Z",
      "side": 1,
      "message": "SIMD_ALIGNED does not include \u0027vector_size\u0027 and I\u0027ve seen the compiler copy an array to the stack to make it accessible, assuming the array only contains 1 int.\neg row.h has\ntypedef uint32_t __attribute__((vector_size(16))) uvec32;",
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2833a27_bfc19dd2",
        "filename": "source/compare_neon64.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1571352
      },
      "writtenOn": "2024-05-01T08:37:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb4a5d2e_48abdc36",
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4e50492_f61e90ed",
        "filename": "source/compare_neon64.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-04-29T18:37:13Z",
      "side": 1,
      "message": "subs should go after an instruction where we can do it for free.  e.g. after ldr or after tbl instructions.",
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f52a545_8a09d748",
        "filename": "source/compare_neon64.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1571352
      },
      "writtenOn": "2024-05-01T08:37:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4e50492_f61e90ed",
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf32a8fb_38713a35",
        "filename": "source/compare_neon64.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-04-29T18:37:13Z",
      "side": 1,
      "message": "Can we defer the addv so the loop looks more like:\n      \"1:                                \\n\"\n      \"ldr   q0, [%[src]], #16           \\n\"\n      \"subs  %w[count], %w[count], #16   \\n\"\n      \"tbl   v3.16b, {v0.16b}, v19.16b   \\n\"\n      \"tbl   v2.16b, {v0.16b}, v18.16b   \\n\"\n      \"tbl   v1.16b, {v0.16b}, v17.16b   \\n\"\n      \"tbl   v0.16b, {v0.16b}, v16.16b   \\n\"\n      \"mla   v23.4s, v3.4s, v7.4s        \\n\"\n      \"mla   v22.4s, v2.4s, v6.4s        \\n\"\n      \"mla   v21.4s, v1.4s, v5.4s        \\n\"\n      \"mla   v20.4s, v0.4s, v4.4s        \\n\"\n      \"b.gt  1b                          \\n\"",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 142,
        "endChar": 44
      },
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4c60f4f_137eae77",
        "filename": "source/compare_neon64.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1571352
      },
      "writtenOn": "2024-05-01T08:37:30Z",
      "side": 1,
      "message": "I tried this, you end up with a loop that looks like:\n\n    1:\n    ldr   q0, [%[src]], #16\n    subs  %w[count], %w[count], #16\n\n    tbl   v3.16b, {v0.16b}, v24.16b\n    tbl   v2.16b, {v0.16b}, v23.16b\n    tbl   v1.16b, {v0.16b}, v22.16b\n    tbl   v0.16b, {v0.16b}, v21.16b\n\n    mul   v4.4s, v4.4s, v20.4s   // mul by c16\n    mul   v5.4s, v5.4s, v20.4s\n    mul   v6.4s, v6.4s, v20.4s\n    mul   v7.4s, v7.4s, v20.4s\n\n    mla   v4.4s, v0.4s, v16.4s\n    mla   v5.4s, v1.4s, v17.4s\n    mla   v6.4s, v2.4s, v18.4s\n    mla   v7.4s, v3.4s, v19.4s\n    mul   %w[hash0], %w[hash0], %w[c16]\n    b.ne  1b\n\nYou need the additional multiplies by c16 which makes the loop-carried critical path quite a lot worse on big cores since vector mul + mla has quite a lot higher latency than the scalar madd instruction. The little cores have a small preference for the vector version due to the dependency chain within each iteration of the loop but on balance I think the original version is probably preferable?",
      "parentUuid": "bf32a8fb_38713a35",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 142,
        "endChar": 44
      },
      "revId": "68cfac59e44dcae6d5b624bed67900defab43aa1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}