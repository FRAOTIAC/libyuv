{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3c80d9d1_6c0fed9f",
        "filename": "tools_libyuv/autoroller/roll_deps.py",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1178490
      },
      "writtenOn": "2023-05-27T21:11:16Z",
      "side": 1,
      "message": "Do you have an example of these?\n\n(I wonder if this needs to be ported to WebRTC as well or if for some reason this is a libyuv only thing)",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 226,
        "endChar": 42
      },
      "revId": "4ede88659bee33c69705fbebb164180b57de981a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b67af5c_249d18ec",
        "filename": "tools_libyuv/autoroller/roll_deps.py",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1174609
      },
      "writtenOn": "2023-05-27T22:21:19Z",
      "side": 1,
      "message": "In DEPS, \"src/remoting/host/installer/linux/internal\" is a good example of this:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:DEPS;l\u003d4202",
      "parentUuid": "3c80d9d1_6c0fed9f",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 226,
        "endChar": 42
      },
      "revId": "4ede88659bee33c69705fbebb164180b57de981a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b682dcd_069884ac",
        "filename": "tools_libyuv/autoroller/roll_deps.py",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1178490
      },
      "writtenOn": "2023-05-30T09:00:04Z",
      "side": 1,
      "message": "WebRTC does https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/tools_webrtc/autoroller/roll_deps.py;l\u003d268-280;drc\u003d4b3bb799e2e1e559ec284e5d192fd01d93691db6.\n\nCan this work here?\n\nI think yes, can you copy and try?",
      "parentUuid": "1b67af5c_249d18ec",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 226,
        "endChar": 42
      },
      "revId": "4ede88659bee33c69705fbebb164180b57de981a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e32a2046_f1de57ae",
        "filename": "tools_libyuv/autoroller/roll_deps.py",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1174609
      },
      "writtenOn": "2023-05-30T14:29:50Z",
      "side": 1,
      "message": "I\u0027m pretty confident it will work (I\u0027ll try it), but I should note it *ignores* such dependencies, it does not fix them. The equivalent \u0027else\u0027 block in the WebRTC code does this:\n\n```\nif \u0027@\u0027 not in dep[\u0027url\u0027]:\n  continue\nurl, revision \u003d dep[\u0027url\u0027].split(\u0027@\u0027)\nresult[path] \u003d DepsEntry(path, url, revision)\n```\n\nThis skips the DEPS entry entirely if there is no \u0027@\u0027. I think this happens to work for WebRTC and libyuv because the one entry that doesn\u0027t conform to this rule is the one I flagged above, but IIUC we don\u0027t depend on it, so when the changed DEPS computation runs, it is dropped anyways. Which is preferred? I believe the current CL\u0027s solution is more robust to new instances of this occurring in DEPS, but perhaps the real solution is to insist that no repository always pulls HEAD?",
      "parentUuid": "0b682dcd_069884ac",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 226,
        "endChar": 42
      },
      "revId": "4ede88659bee33c69705fbebb164180b57de981a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}