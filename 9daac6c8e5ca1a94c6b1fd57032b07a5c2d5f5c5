{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "50fc53a4_d9138a6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2022-12-13T20:00:03Z",
      "side": 1,
      "message": "LGTM.\n\nI reviewed the Google-internal version of this CL. I don\u0027t know if you responded to my suggestions there, but I am repeating my suggestions below.",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a69f696a_085cae37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2022-12-13T20:52:10Z",
      "side": 1,
      "message": "oh sorry... I missed those comments in the original row_common review.  Will clean up row_common in google3 before continuing here",
      "parentUuid": "50fc53a4_d9138a6c",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88934970_32a1c513",
        "filename": "source/row_common.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2022-12-13T20:00:03Z",
      "side": 1,
      "message": "Nit: The whole thing should be parenthesized:\n\n```\n#define STATIC_CAST(type, expr) ((type)(expr))\n```\n\nIn general it\u0027s safer to parenthesize the macro parameters, and if the macro expands to an expression, parenthesize the whole expression.\n\nWe don\u0027t need to parenthesize `static_cast\u003ctype\u003e(expr)` because it is a single item.",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "811d02d6_fbefa23f",
        "filename": "source/row_common.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2022-12-13T20:52:10Z",
      "side": 1,
      "message": "There are parenthesize around (expr) in both C and C++ version?  The cast unary operator is assumed to be high precedence.",
      "parentUuid": "88934970_32a1c513",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c9f165d_0b104335",
        "filename": "source/row_common.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2022-12-13T21:15:36Z",
      "side": 1,
      "message": "Array subscripting `[]` and struct member access by pointer `-\u003e` have higher precedence than the cast operator:\nhttps://en.cppreference.com/w/c/language/operator_precedence\n\nSo something like `STATIC_CAST(uint16_t *, buf)[i]` would need the parentheses around `(type)(expr)`.\n\nSince we never use the `STATIC_CAST` macro with a pointer type, the current macro definition works.",
      "parentUuid": "811d02d6_fbefa23f",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aeb686ef_ea3ba5ca",
        "filename": "source/row_common.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2022-12-13T21:29:01Z",
      "side": 1,
      "message": "It would expand to (uint16_t *)(buf)[i].  okay, I guess youre right but that isn\u0027t used and would probably want to be a reinterpret_cast\nI\u0027m not sure I\u0027ll keep the static cast... a C cast is preferred.",
      "parentUuid": "2c9f165d_0b104335",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0adbe192_4cf92976",
        "filename": "source/row_common.cc",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2022-12-13T20:00:03Z",
      "side": 1,
      "message": "This uses more casts than necessary. C automatically converts operands of smaller integer types to `int`. It\u0027s simpler to perform all the operations using `int` and just cast the final result to `uint8_t`:\n\n```\n    uint8_t g \u003d STATIC_CAST(uint8_t, (src_rgb565[0] \u003e\u003e 5) | ((src_rgb565[1] \u0026 0x07) \u003c\u003c 3));\n```\n\nThere are many other occurrences of this issue in this CL.",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25507c2f_dbf8eebe",
        "filename": "source/row_common.cc",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2022-12-13T20:52:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0adbe192_4cf92976",
      "revId": "9daac6c8e5ca1a94c6b1fd57032b07a5c2d5f5c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}