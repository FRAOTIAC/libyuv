{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6d5711ef_b4fae78e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1575067
      },
      "writtenOn": "2023-07-28T08:30:14Z",
      "side": 1,
      "message": "Hi all, we provide this CL to enable ARGBShuffle.\nSince the suffle index array is one of input argument, we need to make sure VL isn\u0027t larger than array_size(typically 16).",
      "revId": "73b8e7d31aeaa7a950a78db28ca987c484e1f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39786c97_445c139e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-08-15T21:43:27Z",
      "side": 1,
      "message": "We forgot to finish this review?\nThe ARGB shuffle is convenient on other CPUs but it might make sense to implement ARGBToBGRA etc using RVV specific row functions, if there is a better way.\nvlseg4/vsseg4 would be the obvious way.",
      "revId": "73b8e7d31aeaa7a950a78db28ca987c484e1f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ebbf514_5d4dc5da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1575067
      },
      "writtenOn": "2023-08-16T02:35:51Z",
      "side": 1,
      "message": "\u003e We forgot to finish this review?\n\nYes, ( ´•̥̥̥ω•̥̥̥` )\n\n\n\u003e ARGBToBGRA etc using RVV specific row functions,  if there is a better way.\n\u003e vlseg4/vsseg4 would be the obvious way.\n\nThere\u0027s a tradeoff here:\n1. vlseg and vsseg: straightforward, but vmv is required.\n2. vle + vrgather: it need to get currently vlmax \u0026 initializied input array size(in ARGBShuffle). \u003d\u003e So I add helper function `GetRVVVrgatherMaxVL()` to get initializied input array size and avoid `vsetvl \u003e GetRVVVrgatherMaxVL()`.",
      "parentUuid": "39786c97_445c139e",
      "revId": "73b8e7d31aeaa7a950a78db28ca987c484e1f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "506c6eac_208bd61d",
        "filename": "source/cpu_id.cc",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-08-15T21:43:27Z",
      "side": 1,
      "message": "Is this function necessary?  It would only be used from RVV code?\n\nNaming wise, I think it would be GetRVVVRGatherMaxVL.  Or GetRVVGatherMaxVL",
      "revId": "73b8e7d31aeaa7a950a78db28ca987c484e1f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00b42ec0_6d281891",
        "filename": "source/cpu_id.cc",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1575067
      },
      "writtenOn": "2023-08-17T02:49:41Z",
      "side": 1,
      "message": "\u003e Is this function necessary?  It would only be used from RVV code?\n\nI think this is only necessary for RVV.\nDesign this to help runtime indicate how large is predefined array.\n\nFor RVV, we need to consider different VLEN:\n1. `VLEN is larger than predefined array size`:\nwe can only fill partial vector register. If we want to fully utilize it, we may need to introduce other code to detect and fill.\n2. `VLEN \u003c\u003d predefined array size`\nGood, we can direclty use it with LMUL \u003d 1.\n\nThe problem here is how do we tackle `1. VLEN is larger than predefined array size`. Here, I  add `GetRVVVrgatherMaxVL()` to provide opportunity for user to predefined longer array to use.",
      "parentUuid": "506c6eac_208bd61d",
      "revId": "73b8e7d31aeaa7a950a78db28ca987c484e1f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96d231d0_a4d8cac0",
        "filename": "source/cpu_id.cc",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1575067
      },
      "writtenOn": "2023-08-17T02:53:23Z",
      "side": 1,
      "message": "Could we migrate review and discussion to https://chromium-review.googlesource.com/c/libyuv/libyuv/+/4787651 ?",
      "parentUuid": "00b42ec0_6d281891",
      "revId": "73b8e7d31aeaa7a950a78db28ca987c484e1f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}