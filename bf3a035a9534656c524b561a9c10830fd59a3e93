{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aaffe6f7_69341bf9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-03-31T19:50:49Z",
      "side": 1,
      "message": "benchmark of all AR64 functions on pixel 4\nlibyuv_test --gunit_also_run_disabled_tests \u0027--gunit_filter\u003d*AR64*\u0027 --libyuv_width\u003d1280 --libyuv_height\u003d720 --libyuv_repeat\u003d1000 --libyuv_flags\u003d-1 --libyuv_cpu_info\u003d-1\n[       OK ] LibYUVConvertTest.ARGBToAR64_Any (436 ms)\n[       OK ] LibYUVConvertTest.ARGBToAR64_Unaligned (390 ms)\n[       OK ] LibYUVConvertTest.ARGBToAR64_Invert (522 ms)\n[       OK ] LibYUVConvertTest.ARGBToAR64_Opt (389 ms)\n[       OK ] LibYUVConvertTest.ARGBToAR64_Random (35 ms)\n[       OK ] LibYUVConvertTest.ABGRToAR64_Any (366 ms)\n[       OK ] LibYUVConvertTest.ABGRToAR64_Unaligned (370 ms)\n[       OK ] LibYUVConvertTest.ABGRToAR64_Invert (491 ms)\n[       OK ] LibYUVConvertTest.ABGRToAR64_Opt (365 ms)\n[       OK ] LibYUVConvertTest.ABGRToAR64_Random (29 ms)\n[       OK ] LibYUVConvertTest.AR64ToARGB_Any (504 ms)\n[       OK ] LibYUVConvertTest.AR64ToARGB_Unaligned (513 ms)\n[       OK ] LibYUVConvertTest.AR64ToARGB_Invert (717 ms)\n[       OK ] LibYUVConvertTest.AR64ToARGB_Opt (510 ms)\n[       OK ] LibYUVConvertTest.AR64ToARGB_Random (18 ms)\n[       OK ] LibYUVConvertTest.AR64ToABGR_Any (503 ms)\n[       OK ] LibYUVConvertTest.AR64ToABGR_Unaligned (519 ms)\n[       OK ] LibYUVConvertTest.AR64ToABGR_Invert (748 ms)\n[       OK ] LibYUVConvertTest.AR64ToABGR_Opt (503 ms)\n[       OK ] LibYUVConvertTest.AR64ToABGR_Random (20 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Any (644 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Unaligned (651 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Invert (885 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Opt (639 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Random (26 ms)\n[       OK ] LibYUVConvertTest.AB64ToAR64_Any (643 ms)\n[       OK ] LibYUVConvertTest.AB64ToAR64_Unaligned (641 ms)\n[       OK ] LibYUVConvertTest.AB64ToAR64_Invert (877 ms)\n[       OK ] LibYUVConvertTest.AB64ToAR64_Opt (634 ms)\n[       OK ] LibYUVConvertTest.AB64ToAR64_Random (25 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Symetric_Any (659 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Symetric_Unaligned (662 ms)\n[       OK ] LibYUVConvertTest.AR64ToAB64_Symetric_Opt (657 ms)\n[----------] 33 tests from LibYUVConvertTest (15610 ms total)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_10_Any (634 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_10_Unaligned (650 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_10_Invert (553 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_10_Opt (641 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Any (503 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Unaligned (565 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Invert (524 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Opt (507 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_12_Any (638 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_12_Unaligned (644 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_12_Invert (551 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_12_Opt (627 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Any (502 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Unaligned (563 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Invert (512 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Opt (519 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_16_Any (653 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_16_Unaligned (641 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_16_Invert (550 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_16_Opt (633 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Any (508 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Unaligned (572 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Invert (521 ms)\n[       OK ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Opt (499 ms)\n[----------] 24 tests from LibYUVPlanarTest (13723 ms total)\n[\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d] 57 tests from 2 test suites ran. (29334 ms total)\n",
      "revId": "bf3a035a9534656c524b561a9c10830fd59a3e93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45a04046_31dc551c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-03-31T20:09:16Z",
      "side": 1,
      "message": "I was trying to test wasm, but am hitting a unittest failure with odd widths\n\nwebrun -- /google/src/cloud/fbarchard/ar64/google3/blaze-bin/third_party/libyuv/libyuv_test -- \u0027--gunit_filter\u003d*Merge*\u0027 --libyuv_width\u003d131\n\n[  FAILED  ] 65 tests, listed below:\n[  FAILED  ] LibYUVPlanarTest.MergeUVPlane_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeUVPlane_16_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeRGBPlane_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeARGBPlane_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeXRGBPlane_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_10_Any\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_10_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_10_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_10_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Any\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_10_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_12_Any\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_12_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_12_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_12_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Any\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_12_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_16_Any\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_16_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_16_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_16_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Any\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeAR64Plane_Opaque_16_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_10_Any\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_10_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_10_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_10_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_10_Any\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_10_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_10_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_10_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_12_Any\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_12_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_12_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_12_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_12_Any\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_12_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_12_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_12_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_16_Any\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_16_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_16_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_16_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_16_Any\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_16_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_16_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeARGB16To8Plane_Opaque_16_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_10_Any\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_10_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_10_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_10_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_12_Any\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_12_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_12_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_12_Opt\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_16_Any\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_16_Unaligned\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_16_Invert\n[  FAILED  ] LibYUVPlanarTest.MergeXR30Plane_16_Opt\n\n65 FAILED TESTS\n\n\n[ RUN      ] LibYUVPlanarTest.MergeUVPlane_Opt\nthird_party/libyuv/files/unit_test/planar_test.cc:2604: Failure\nExpected equality of these values:\n  dst_pixels_c[i]\n    Which is: \u0027x\u0027 (120, 0x78)\n  dst_pixels_opt[i]\n    Which is: \u0027\u003c\u0027 (60, 0x3C)\n\n\n[ RUN      ] LibYUVPlanarTest.MergeAR64Plane_10_Any\nthird_party/libyuv/files/unit_test/planar_test.cc:3193: Failure\nExpected equality of these values:\n  dst_pixels_c[i]\n    Which is: 257\n  dst_pixels_opt[i]\n    Which is: 514\n\n",
      "revId": "bf3a035a9534656c524b561a9c10830fd59a3e93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df05eee4_1e9fe451",
        "filename": "source/row_common.cc",
        "patchSetId": 11
      },
      "lineNbr": 60,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-03-31T20:09:16Z",
      "side": 1,
      "message": "This name is obscure and the comment is misleading.\nThe function will work with any max value, not just power of 2.\nclamp1023 could be removed and use your new function.\n\nthese branchless methods were first for early clang and visual c.\nit was fixed for basic intel and arm code, but there is rumour of a regression.\nrecently web assembly has performance issues with branches so the math tricks work.\nit is anticipated that web assembly and simd will be more important in the future.  for now it just works, but in future there may be some optimization for it, starting with optimizing the C code.  One of the single biggest performance gotchas are min()/max() on intel version of it.",
      "range": {
        "startLine": 60,
        "startChar": 34,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "bf3a035a9534656c524b561a9c10830fd59a3e93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "399903d8_a101d1fb",
        "filename": "source/row_common.cc",
        "patchSetId": 11
      },
      "lineNbr": 60,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-04-01T21:18:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "df05eee4_1e9fe451",
      "range": {
        "startLine": 60,
        "startChar": 34,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "bf3a035a9534656c524b561a9c10830fd59a3e93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}