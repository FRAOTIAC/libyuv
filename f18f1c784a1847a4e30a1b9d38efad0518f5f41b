{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dd512425_1b62bc90",
        "filename": "source/row_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-05-09T18:59:32Z",
      "side": 0,
      "message": "would it be better to avoid _M_ARM64EC with the guard?\n\n// This module is for Visual C 32/64 bit x86\n#if !defined(LIBYUV_DISABLE_X86) \u0026\u0026 defined(_MSC_VER) \u0026\u0026 \\\n  !defined(__clang__) \u0026\u0026 (defined(_M_IX86) || defined(_M_X64)) \u0026\u0026 \\\n  !defined(_M_ARM64EC)",
      "revId": "f18f1c784a1847a4e30a1b9d38efad0518f5f41b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "313082f3_548f65c4",
        "filename": "source/row_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-05-09T19:56:28Z",
      "side": 0,
      "message": "Looks ok",
      "parentUuid": "dd512425_1b62bc90",
      "revId": "f18f1c784a1847a4e30a1b9d38efad0518f5f41b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "243b1f78_431ab5f7",
        "filename": "source/row_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-05-09T19:56:37Z",
      "side": 0,
      "message": "\u003e would it be better to avoid _M_ARM64EC with the guard?\n\u003e \n\u003e // This module is for Visual C 32/64 bit x86\n\u003e #if !defined(LIBYUV_DISABLE_X86) \u0026\u0026 defined(_MSC_VER) \u0026\u0026 \\\n\u003e   !defined(__clang__) \u0026\u0026 (defined(_M_IX86) || defined(_M_X64)) \u0026\u0026 \\\n\u003e   !defined(_M_ARM64EC)\n\nPossibly. I don\u0027t know how this would get used in the Arm64EC build.",
      "parentUuid": "dd512425_1b62bc90",
      "revId": "f18f1c784a1847a4e30a1b9d38efad0518f5f41b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b9be2b6_2eb54225",
        "filename": "source/row_win.cc",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-05-09T20:06:17Z",
      "side": 0,
      "message": "\u003e \u003e would it be better to avoid _M_ARM64EC with the guard?\n\u003e \u003e \n\u003e \u003e // This module is for Visual C 32/64 bit x86\n\u003e \u003e #if !defined(LIBYUV_DISABLE_X86) \u0026\u0026 defined(_MSC_VER) \u0026\u0026 \\\n\u003e \u003e   !defined(__clang__) \u0026\u0026 (defined(_M_IX86) || defined(_M_X64)) \u0026\u0026 \\\n\u003e \u003e   !defined(_M_ARM64EC)\n\u003e \n\u003e Possibly. I don\u0027t know how this would get used in the Arm64EC build.\n\n```\nyuv.lib(convert_argb.obj) : error LNK2019: unresolved external symbol I444ToARGBRow_SSSE3 referenced in function #I420ToARGBMatrixBilinear (EC Symbol)\n```",
      "parentUuid": "243b1f78_431ab5f7",
      "revId": "f18f1c784a1847a4e30a1b9d38efad0518f5f41b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}