{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4926d8dc_74d2ae33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1208520
      },
      "writtenOn": "2022-12-21T08:13:15Z",
      "side": 1,
      "message": "Any feedback on the patch? Could we get it merged? \n\nI would like to add 440 10 bit support to libwebrtc, and I would prefer this methods to be in libyuv than in libwebrtc.",
      "revId": "77beb6ff8a083f6b78cd512017a6a73cc4d35f21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d90f3900_7f2efbc2",
        "filename": "source/convert.cc",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-01-03T18:42:29Z",
      "side": 1,
      "message": "This does multiple passes per plane which is not very efficient and could be done by the user, so it doesn\u0027t need to be in libyuv unless it can be improved.\nBut it is relatively easy to optimize\n1. without assembly the code can be restructured to do a row at a time, scaling 2 rows down to 1, and then converting 10 bit to 8 bit.\nIt would be the same 2 steps, but far more cache friendly, and on x86 this would be 95% efficient.  On arm about 80%\n2. with assembly a 1 step row function can be written.  I put an ARM version in the issue tracker.\n3. and/or a row function can be written that behaves like an assembly 1 step function exists, but internally it calls 2 row functions.  See some the AVX row functions at the end of row_common.cc\n\nIts okay to submit this as is, but should have a todo to do a 1 step conversion.  This function is relatively important, converting from a common new format to the common old format, providing a backwards compatibility step.  Ideally there would also be I420ToI010 to complete the circle.",
      "revId": "77beb6ff8a083f6b78cd512017a6a73cc4d35f21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}