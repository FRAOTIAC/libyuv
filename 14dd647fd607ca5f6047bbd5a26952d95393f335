{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "969367f6_3741adf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-07-09T08:07:59Z",
      "side": 1,
      "message": "scaleup by 2 is used when converting I420 or NV12 to I444 with filtering.\nThe current code has a rounding bug that should be caught if it expects exact results to match C code.",
      "revId": "14dd647fd607ca5f6047bbd5a26952d95393f335",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1c5a51b_da9367e2",
        "filename": "source/scale_rvv.cc",
        "patchSetId": 2
      },
      "lineNbr": 533,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-07-09T08:05:50Z",
      "side": 1,
      "message": "add should be 8 when the shift is 4.\n(a + b*3 + c*3 + d*9 +8)/16\nsum of the coefficients is 16 so shift by 4 which needs rounding, so add 8.",
      "revId": "14dd647fd607ca5f6047bbd5a26952d95393f335",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75acdb96_01172ad7",
        "filename": "source/scale_rvv.cc",
        "patchSetId": 2
      },
      "lineNbr": 533,
      "author": {
        "id": 1573667
      },
      "writtenOn": "2023-07-09T09:48:15Z",
      "side": 1,
      "message": "the remaining part of `8` being placed at v_t0, for instance:\n\n```\n    // v_s0_u16 \u003d (s0 + 2)\n    v_s0_u16 \u003d __riscv_vwaddu_vx_u16m4(v_s0, 2, vl);\n\n    // v_s0_u16 \u003d (3s1 + s0 + 2)\n    v_s0_u16 \u003d __riscv_vwmaccu_vv_u16m4(v_s0_u16, v_3_u8, v_s1, vl);\n\n    // v_t0_u16 \u003d (t0 + 2)\n    v_t0_u16 \u003d __riscv_vwaddu_vx_u16m4(v_t0, 2, vl);\n\n    // v_t0_u16 \u003d (3t1 + t0 + 2)\n    v_t0_u16 \u003d __riscv_vwmaccu_vv_u16m4(v_t0_u16, v_3_u8, v_t1, vl);\n\n    // 3(v_s0_u16) + v_t0_u16\n    // \u003d 3(3s1 + s0 + 2) + 3t1 + t0 + 2\n    // \u003d 9s1 + 3s0 + 3t1 + t0 + 8\n    v_t0_u16 \u003d __riscv_vmacc_vv_u16m4(v_t0_u16, v_3_u16, v_s0_u16, vl);\n```",
      "parentUuid": "e1c5a51b_da9367e2",
      "revId": "14dd647fd607ca5f6047bbd5a26952d95393f335",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61b6feb0_079181a4",
        "filename": "source/scale_rvv.cc",
        "patchSetId": 2
      },
      "lineNbr": 533,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2023-07-10T23:28:00Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "75acdb96_01172ad7",
      "revId": "14dd647fd607ca5f6047bbd5a26952d95393f335",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}