{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aeb83977_7e2a93ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-03-22T10:53:33Z",
      "side": 1,
      "message": "consider row_neon version for aarch32",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "451a802b_61e95a6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1571352
      },
      "writtenOn": "2024-03-22T11:13:01Z",
      "side": 1,
      "message": "Hi Frank, similar optimizations do look possible for the 32-bit Neon code in scale_neon.cc; but Arm\u0027s contribution to libyuv is focussed on, and is limited to, optimization for 64-bit platforms for the time being.",
      "parentUuid": "aeb83977_7e2a93ef",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30a1972e_be0d82b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-04-10T20:03:32Z",
      "side": 1,
      "message": "This may be problematic, since aarch32 is important too. We\u0027ll need to make another CL to back port.",
      "parentUuid": "451a802b_61e95a6a",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a705bb2a_069bf605",
        "filename": "source/scale_neon64.cc",
        "patchSetId": 2
      },
      "lineNbr": 1202,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-03-22T10:52:54Z",
      "side": 1,
      "message": "nit: technically this is _ARM not Neon and wont need the Neon cpu detect.",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c0efba3_5801deb8",
        "filename": "source/scale_neon64.cc",
        "patchSetId": 2
      },
      "lineNbr": 1202,
      "author": {
        "id": 1571352
      },
      "writtenOn": "2024-03-26T09:53:33Z",
      "side": 1,
      "message": "Neon is mandatory on AArch64 so this seems fine as-is just to be consistent with the rest of the existing naming? at least until we start adding more architecture extensions beyond neon?",
      "parentUuid": "a705bb2a_069bf605",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e77d329_422216fe",
        "filename": "source/scale_neon64.cc",
        "patchSetId": 2
      },
      "lineNbr": 1202,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-04-10T20:03:32Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1c0efba3_5801deb8",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2643fe63_fbb2f255",
        "filename": "source/scale_neon64.cc",
        "patchSetId": 2
      },
      "lineNbr": 1221,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2024-03-22T10:52:54Z",
      "side": 1,
      "message": "Did you try just 2 pixels per loop?",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "922d1714_fb41a848",
        "filename": "source/scale_neon64.cc",
        "patchSetId": 2
      },
      "lineNbr": 1221,
      "author": {
        "id": 3355700
      },
      "writtenOn": "2024-03-22T12:01:29Z",
      "side": 1,
      "message": "Reduction in runtime with 2 pixels per loop:\n\nCortex-A55: +10.7%\nCortex-A510: -61.5%\nCortex-A76: -50.6%\n\nExisting patch seems better.",
      "parentUuid": "2643fe63_fbb2f255",
      "revId": "15d5c43a190af6452526986531870653f7691f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "15d5c43a190af6452526986531870653f7691f99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "15d5c43a190af6452526986531870653f7691f99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "15d5c43a190af6452526986531870653f7691f99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}