{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "42f2442d_143bad74",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-12-23T01:21:03Z",
      "side": 1,
      "message": "consider trimming the intrinsics header down to whats needed.\n\nthe mmi and msa are likely falling into disrepair.  If mmi is not needed, i\u0027d suggest removing it, as msa is far cleaner.  i\u0027m not able to build/test mips and la and leave it to you to contribute the code.  thanks!",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fd6542d_a1f54b76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-12-23T01:30:22Z",
      "side": 1,
      "message": "ERROR at //libyuv.gni:12:1: Can\u0027t load input file.\nimport(\"//build/config/loongarch.gni\")\n",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4784a164_5298edcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1221903
      },
      "writtenOn": "2021-12-23T09:09:43Z",
      "side": 1,
      "message": "Hi Frank, I am HaoChen‘s colleague.\nMMI and MSA belongs to MIPS arch which is used for LoongSon 3A1000~3A4000. MMI is 64-bit SIMD which is supported by 3A1000~3A3000, MSA is first supported on 3A4000. I agree with  your opinion to remove MMI as it\u0027s really difficult to maintain so many kind of SIMD. We will rise a thread to do this work.\nLSX and LASX belongs to LoongSon\u0027s new architecture \u0027loongarch\u0027. We can donate HW or online host for building and testing if it\u0027s needed, also, we will continue to make sure each patch uploaded has passed the test.",
      "parentUuid": "42f2442d_143bad74",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea83deb8_3ace1429",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1221903
      },
      "writtenOn": "2021-12-23T09:09:43Z",
      "side": 1,
      "message": "How about remove \u0027import(\"//build/config/loongarch.gni\")\u0027 temporarily.\nTo support building with ninja in the next step.",
      "parentUuid": "2fd6542d_a1f54b76",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4293b3a8_e81e6d25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2022-01-09T22:27:40Z",
      "side": 1,
      "message": "My quick summary of mips/loongson is\nrdsp2 - 32 bit simd.\nmmi - 64 bit simd.  similar to mmx\nmsa - 128 bit simd.  similar to sse/neon\nlsx - 128 bit simd for loongsong.\nlasx - 256 bit simd for loongsong",
      "parentUuid": "4784a164_5298edcc",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f7dcd34_55b80d46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1221903
      },
      "writtenOn": "2022-01-10T02:41:58Z",
      "side": 1,
      "message": "loongson is a company which used to use \u0027mips\u0027 architecture for his CPU, mmi is an extention for mips authored by loongson. Now loongson use his own architecture \u0027loongarch\u0027 for his new series of CPU.\n\n           64     128     256+\nX86      : mmx    sse*    avx*\narm      :        neon\nmips     : mmi    msa\nloongarch:        lsx     lasx",
      "parentUuid": "4293b3a8_e81e6d25",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21fb8bf4_e52883f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1443440
      },
      "writtenOn": "2022-01-11T03:39:56Z",
      "side": 1,
      "message": "Yes，you are right.",
      "parentUuid": "4293b3a8_e81e6d25",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d76f301b_1a1b47d0",
        "filename": "libyuv.gni",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1178490
      },
      "writtenOn": "2021-12-24T10:36:39Z",
      "side": 1,
      "message": "What is the content of this file?\n\n//build/ is a Chromium repo, is this file going to be submitted there?",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19168093_08cf50a2",
        "filename": "libyuv.gni",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1443440
      },
      "writtenOn": "2022-01-11T03:39:56Z",
      "side": 1,
      "message": "Thanks very much for your questions. We added loongarch support for the build projects when compiling with ninja locally. Since it has not been submitted to the corresponding community, we intend to delete these contents here for the time being.",
      "parentUuid": "d76f301b_1a1b47d0",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fe10890_838f7ea9",
        "filename": "source/row_lasx.cc",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-12-23T01:21:03Z",
      "side": 1,
      "message": "no mla instruction on lasx?",
      "range": {
        "startLine": 90,
        "startChar": 46,
        "endLine": 90,
        "endChar": 79
      },
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e07c2167_23e92196",
        "filename": "source/row_lasx.cc",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1443440
      },
      "writtenOn": "2022-01-11T03:39:56Z",
      "side": 1,
      "message": "Thanks for your advice. There is a \"madd\" instruction on lasx. Because u_l and v_l variables are added with different variables many times later, multiple multiplication operations can be avoided by using mul instructions here.",
      "parentUuid": "6fe10890_838f7ea9",
      "range": {
        "startLine": 90,
        "startChar": 46,
        "endLine": 90,
        "endChar": 79
      },
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6275fe5c_e78a44d7",
        "filename": "source/row_lasx.cc",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-12-23T01:21:03Z",
      "side": 1,
      "message": "avoid macros if possible.  its hard to tell what this DUP4 does.  it uses INS() but I dont see a definition of that.  From the 6 parameter I\u0027m guess this does a shift by 6.",
      "range": {
        "startLine": 99,
        "startChar": 42,
        "endLine": 99,
        "endChar": 79
      },
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "605cfb7b_8725c9df",
        "filename": "source/row_lasx.cc",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1443440
      },
      "writtenOn": "2022-01-11T03:39:56Z",
      "side": 1,
      "message": "Thansk for your questions. DUP4 macro is defined in include/libyuv/loongson_intrinsics.h file. This macro is mainly designed to avoid writing the same instruction name many times.",
      "parentUuid": "6275fe5c_e78a44d7",
      "range": {
        "startLine": 99,
        "startChar": 42,
        "endLine": 99,
        "endChar": 79
      },
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da47b50c_272f4cc5",
        "filename": "source/row_lasx.cc",
        "patchSetId": 5
      },
      "lineNbr": 298,
      "author": {
        "id": 1115898
      },
      "writtenOn": "2021-12-23T01:21:03Z",
      "side": 1,
      "message": "for a function function, consider doing ARGBToYJ which is for RGB to YUV, and popular for both graphics and machine learning.  It tends to optimize very nicely.",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bb6af6b_a89c20d4",
        "filename": "source/row_lasx.cc",
        "patchSetId": 5
      },
      "lineNbr": 298,
      "author": {
        "id": 1443440
      },
      "writtenOn": "2022-01-11T03:39:56Z",
      "side": 1,
      "message": "Thanks very much for your advice. ARGBToYJ is optimized in the subsequent patch called \"Add optimization functions in row_lsx.cc file\". We submitted 5 patches and optimized 103 common functions.",
      "parentUuid": "da47b50c_272f4cc5",
      "revId": "aa23ecc60beb97ecede6611028d356fc9efb014e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}